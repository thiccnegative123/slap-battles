local Players = game:GetService("Players")
local player = Players.LocalPlayer

-- Toggle state: true = slapable, false = unslapable
local slapableEnabled = false

-- GUI setup
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "SlapableToggleGUI"
screenGui.ResetOnSpawn = false
screenGui.Parent = player:WaitForChild("PlayerGui")

local button = Instance.new("TextButton")
button.Size = UDim2.new(0, 150, 0, 40)
button.Position = UDim2.new(0, 10, 0, 10) -- top left
button.BackgroundColor3 = Color3.fromRGB(170, 0, 0)
button.TextColor3 = Color3.fromRGB(255, 255, 255)
button.Font = Enum.Font.GothamBold
button.TextSize = 18
button.Text = "Slapable: OFF"
button.Parent = screenGui

-- Function to update button look
local function updateButton()
    if slapableEnabled then
        button.Text = "Slapable: ON"
        button.BackgroundColor3 = Color3.fromRGB(0, 170, 0) -- green
    else
        button.Text = "Slapable: OFF"
        button.BackgroundColor3 = Color3.fromRGB(170, 0, 0) -- red
    end
end

-- Function to apply setting to one tool
local function setGloveTouch(tool)
    if tool:IsA("Tool") and tool.Name == "Default" then
        local glove = tool:FindFirstChild("Glove")
        if glove and glove:IsA("BasePart") then
            glove.CanTouch = slapableEnabled
        end
    end
end

-- Function to update all current tools
local function updateAllTools()
    -- Check backpack
    for _, tool in ipairs(player.Backpack:GetChildren()) do
        setGloveTouch(tool)
    end
    -- Check character
    if player.Character then
        for _, tool in ipairs(player.Character:GetChildren()) do
            setGloveTouch(tool)
        end
    end
end

-- Toggle when button tapped
button.MouseButton1Click:Connect(function()
    slapableEnabled = not slapableEnabled
    updateAllTools()
    updateButton()
end)

-- Listen for new tools in backpack
player.Backpack.ChildAdded:Connect(setGloveTouch)

-- Listen for new tools in character
player.CharacterAdded:Connect(function(char)
    char.ChildAdded:Connect(setGloveTouch)
end)

-- First run
updateButton()
updateAllTools()

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer

-- Reach value (starts at 5 studs)
_G.ReachRadius = 5

-- Main GUI
local gui = Instance.new("ScreenGui")
gui.Name = "ReachControlGUI"
gui.Parent = LocalPlayer:WaitForChild("PlayerGui")
gui.ResetOnSpawn = false

-- Draggable frame
local mainFrame = Instance.new("Frame", gui)
mainFrame.Size = UDim2.new(0, 200, 0, 100)
mainFrame.Position = UDim2.new(0.4, 0, 0.8, 0)
mainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
mainFrame.Active = true
mainFrame.Draggable = true

-- Reach label
local reachLabel = Instance.new("TextLabel", mainFrame)
reachLabel.Size = UDim2.new(1, 0, 0.4, 0)
reachLabel.Position = UDim2.new(0, 0, 0, 0)
reachLabel.BackgroundTransparency = 0.5
reachLabel.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
reachLabel.TextColor3 = Color3.new(1, 1, 1)
reachLabel.TextScaled = true
reachLabel.Text = "Reach: " .. _G.ReachRadius

-- Minus button (-1)
local minusBtn = Instance.new("TextButton", mainFrame)
minusBtn.Size = UDim2.new(0.5, 0, 0.6, 0)
minusBtn.Position = UDim2.new(0, 0, 0.4, 0)
minusBtn.Text = "-"
minusBtn.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
minusBtn.TextScaled = true

-- Plus button (+1)
local plusBtn = Instance.new("TextButton", mainFrame)
plusBtn.Size = UDim2.new(0.5, 0, 0.6, 0)
plusBtn.Position = UDim2.new(0.5, 0, 0.4, 0)
plusBtn.Text = "+"
plusBtn.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
plusBtn.TextScaled = true

-- Sphere visualization
local sphere
local function createSphere()
    if sphere then
        sphere:Destroy()
    end
    sphere = Instance.new("Part")
    sphere.Shape = Enum.PartType.Ball
    sphere.Size = Vector3.new(_G.ReachRadius * 2, _G.ReachRadius * 2, _G.ReachRadius * 2)
    sphere.Transparency = 0.7
    sphere.Color = Color3.fromRGB(0, 170, 255)
    sphere.Anchored = true
    sphere.CanCollide = false
    sphere.Material = Enum.Material.ForceField
    sphere.Parent = workspace
end

-- Update sphere position
RunService.RenderStepped:Connect(function()
    local char = LocalPlayer.Character
    if char and char:FindFirstChild("HumanoidRootPart") and sphere then
        sphere.Position = char.HumanoidRootPart.Position
    end
end)

-- Respawn handling
LocalPlayer.CharacterAdded:Connect(function()
    task.wait(0.5)
    createSphere()
end)

-- Increase reach (+1)
plusBtn.MouseButton1Click:Connect(function()
    _G.ReachRadius = _G.ReachRadius + 1
    reachLabel.Text = "Reach: " .. _G.ReachRadius
    if sphere then
        sphere.Size = Vector3.new(_G.ReachRadius * 2, _G.ReachRadius * 2, _G.ReachRadius * 2)
    end
end)

-- Decrease reach (-1)
minusBtn.MouseButton1Click:Connect(function()
    _G.ReachRadius = math.max(1, _G.ReachRadius - 1)
    reachLabel.Text = "Reach: " .. _G.ReachRadius
    if sphere then
        sphere.Size = Vector3.new(_G.ReachRadius * 2, _G.ReachRadius * 2, _G.ReachRadius * 2)
    end
end)

-- Get nearest player within reach
local function getNearestPlayerWithinReach()
    local nearestPlayer, shortestDistance = nil, math.huge
    local char = LocalPlayer.Character
    if not char or not char:FindFirstChild("HumanoidRootPart") then
        return nil
    end
    local localHRP = char.HumanoidRootPart

    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local targetHRP = player.Character.HumanoidRootPart
            local distance = (localHRP.Position - targetHRP.Position).Magnitude
            if distance < shortestDistance and distance <= _G.ReachRadius then
                shortestDistance = distance
                nearestPlayer = player
            end
        end
    end
    return nearestPlayer
end

-- Slap function
local function performSlap()
    local target = getNearestPlayerWithinReach()
    if target and target.Character then
        local char = target.Character

        local hrp = char:FindFirstChild("HumanoidRootPart")
        if hrp and ReplicatedStorage:FindFirstChild("SnowHit") then
            ReplicatedStorage.SnowHit:FireServer(hrp)
        end

        local rightArm = char:FindFirstChild("Right Arm")
        if rightArm and ReplicatedStorage:FindFirstChild("BullHit") then
            ReplicatedStorage.BullHit:FireServer(rightArm)
        end

        local leftArm = char:FindFirstChild("Left Arm")
        if leftArm and ReplicatedStorage:FindFirstChild("PullHit") then
            ReplicatedStorage.PullHit:FireServer(leftArm)
        end

        if rightArm and ReplicatedStorage:FindFirstChild("BoomerangH") then
            ReplicatedStorage.BoomerangH:FireServer(rightArm)
        end
    end
end

-- Click anywhere to slap
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if not gameProcessed then
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            performSlap()
        end
    end
end)

-- Create sphere initially
createSphere()
